CREATE TABLE Users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  role ENUM('user', 'admin', 'guide') DEFAULT 'user',
  avatar VARCHAR(255),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Tours (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  slug VARCHAR(255) UNIQUE NOT NULL,
  description TEXT,
  summary TEXT,
  duration INT NOT NULL,
  maxGroupSize INT NOT NULL,
  difficulty ENUM('easy', 'medium', 'difficult'),
  price DECIMAL(10,2) NOT NULL,
  priceDiscount DECIMAL(10,2) DEFAULT 0,
  ratingsAverage DECIMAL(3,2) DEFAULT 0,
  ratingsQuantity INT DEFAULT 0,
  startDates JSON,
  startLocation VARCHAR(255),
  locations JSON,
  coverImage VARCHAR(255),
  images JSON,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  isActive BOOLEAN DEFAULT TRUE
);

CREATE TABLE Bookings (
  id INT AUTO_INCREMENT PRIMARY KEY,
  tourId INT NOT NULL,
  userId INT NOT NULL,
  price DECIMAL(10,2) NOT NULL,
  date DATETIME NOT NULL,
  participants INT NOT NULL,
  status ENUM('pending', 'paid', 'cancelled') DEFAULT 'pending',
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (tourId) REFERENCES Tours(id),
  FOREIGN KEY (userId) REFERENCES Users(id)
);

CREATE TABLE Reviews (
  id INT AUTO_INCREMENT PRIMARY KEY,
  tourId INT NOT NULL,
  userId INT NOT NULL,
  review TEXT NOT NULL,
  rating INT NOT NULL CHECK (rating BETWEEN 1 AND 5),
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (tourId) REFERENCES Tours(id),
  FOREIGN KEY (userId) REFERENCES Users(id)
);